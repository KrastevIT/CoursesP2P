@model IEnumerable<LectureViewModel>
@{
    ViewData["Title"] = "Index";
}

<body>
    <section class="services-area pt-100 pb-70" id="services">
        <div class="container">
            <div class="row">
                <div class="col-xl-8 mx-auto text-center">
                    <div class="section-title">
                        <h1>Лекции</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                @foreach (var lecture in Model)
                {
                    <div class="col-md-4">
                        <div class="card" style="width: 20rem;">
                            <div class="card-body text-center">
                                @if (lecture.Name.Length > 20)
                                {
                                    <h4 class="card-title" rel="tooltip" title="@lecture.Name">@lecture.ShortName</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">@lecture.Name</h4>
                                }
                                @*<p class="card-text"> With supporting text below as a natural lead-in to additional content.</p>*@
                                <a asp-controller="Lectures" asp-action="Video" asp-route-id="@lecture.Id" class="btn btn-primary"><i class="fa fa-video"></i></a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</body>

<div class="d-flex justify-content-center">
    <vc:rating course-id=@int.Parse(ViewData["id"].ToString())></vc:rating>
</div>

@section Scripts {
    <script src="~/js/rating.js"></script>
}
