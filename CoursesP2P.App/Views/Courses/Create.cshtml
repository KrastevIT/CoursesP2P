@model CreateCourseBindingModel
@{
    ViewData["Title"] = "Create";
}

<div class="container">
    <h1>Create new course</h1>

    <form enctype="multipart/form-data" asp-controller="Courses" asp-action="Create" method="post" class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-sm-2" asp-for="Name"></label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="Name" />
                <span class="text-danger" asp-validation-for="Name"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" asp-for="@Model.Description"></label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="@Model.Description" />
                <span class="text-danger" asp-validation-for="@Model.Description"></span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2" asp-for="@Model.Skills"></label>
            <div class="col-sm-10">
                <input type="text" id="skill" class="form-control">
                <div id="skills">

                </div>
            </div>
            <div class="col-sm-10">
                <button id="skillButton" type="button" class="btn btn-info btn-sm">Add skill</button>
            </div>
        </div>

        @*<div class="form-group">
                <label class="control-label col-sm-2" asp-for="@Model.Skills"></label>
                <p class="control-label col-sm-2"><small class="text-primary">Each skill is divided with *</small></p>
                <div class="col-sm-10">
                    <input class="form-control" asp-for="@Model.Skills" placeholder="Examples: *Work with text *Use arrays and lists *Work with date and time" />
                    <span class="text-danger" asp-validation-for="@Model.Skills"></span>
                </div>
            </div>*@
        <div class="form-group">
            <label class="control-label col-sm-2" asp-for="Price"></label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="Price" />
                <span class="text-danger" asp-validation-for="Price"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Category" class="col-sm-2"></label>
            <div class="col-sm-10">
                <select asp-for="Category" asp-items="Html.GetEnumSelectList<CategoryViewModel>()" class="form-control text-body"></select>
                <span asp-validation-for="Category"></span>
            </div>
        </div>
        <div class="fileinput fileinput-new" data-provides="fileinput">
            <label asp-for="@Model.Image" class="col-sm-2"></label>
            <div class="col-sm-10">
                <div class="custom-file">
                    <input asp-for="@Model.Image" />
                    <span asp-validation-for="@Model.Image"></span>
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-sm-10 col-sm-push-2">
                <input type="submit" value="Create" class="btn btn-info" />
                <a asp-controller="Instructors" asp-action="Index" class="btn btn-danger">Cancel</a>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    let skillButton = document.getElementById("skillButton");
    skillButton.addEventListener("click", AddSkill);

    function AddSkill() {
        let getSkill = document.getElementById("skill");

        if (getSkill.value == "") {
            return;
        }

        let div = document.getElementById("skills");
        let span = document.createElement("span");
        span.setAttribute("class", "badge badge-primary");
        span.textContent = getSkill.value;

        div.appendChild(span);

        console.log(span);
        getSkill.value = "";
    }
</script>
